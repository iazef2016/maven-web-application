node{
   def mavenHome = tool name: 'maven3.9.6'
   stage('1.clonecode'){
   //git "https://github.com/iazef2016/maven-web-app"
   //git "https://github.com/iazef2016/maven-web-application"
   git credentialsId: 'githubcred', url: 'https://github.com/iazef2016/maven-web-app'
   }
   stage('2.mavenBuild'){
    sh "${mavenHome}/bin/mvn package"
  }
  /*
  stage('3.codeQualityAnalysis'){
    sh "${mavenHome}/bin/mvn sonar:sonar"    
  }
 
  stage('4.uploadArtifacts'){
    sh "${mavenHome}/bin/mvn deploy"
    }
    stage('5.deployUAT'){
    deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://54.159.237.143:8088/')], contextPath: null, war: 'target/*war'
    }
   stage('6.ManualApproval'){
   sh "echo 'please review & approve'"
   timeout(time:300, unit:'MINUTES')
   {
   input message: 'Application ready for deployment, Please review and approve'}
   }
   stage('7.deploy2prod'){
   deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://54.159.237.143:8088/')], contextPath: null, war: 'target/*war'
   }
   stage('8.notification'){
   sh "create email notification to resolve any issue that may arise"
   emailext body: '''Here is the build and deployment status for tesla-webapp

Regards,
Landmarktech''', recipientProviders: [developers(), upstreamDevelopers()], subject: 'job status', to: 'iazef2016@gmail.com' 
   }

}
